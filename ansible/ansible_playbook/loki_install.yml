---
- name: Установка Docker и Loki на ВМ Loki
  hosts: lokiservers
  become: yes
  vars:
    loki_data_path: /var/lib/loki
    loki_port: 3100
    loki_config_path: /opt/loki/config
    loki_config_file: loki-config.yaml
    loki_docker_image_tar: "loki-2.9.0.tar"
    loki_docker_image_name: "grafana/loki:2.9.0"

  tasks:
    - name: Обновить apt кэш и установить необходимые пакеты
      ansible.builtin.apt:
        name: ['apt-transport-https', 'ca-certificates', 'curl', 'software-properties-common', 'docker.io', 'docker-compose']
        state: latest
        update_cache: yes

    - name: Добавить текущего пользователя в группу docker
      ansible.builtin.user:
        name: "{{ ansible_user }}"
        groups: docker
        append: yes

    - name: Создать директории для Loki
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
        mode: '0755'
      loop:
        - "{{ loki_data_path }}"
        - "{{ loki_config_path }}"

    - name: Изменить права доступа к директории данных Loki
      ansible.builtin.file:
        path: "{{ loki_data_path }}"
        state: directory
        mode: '0777' # Даем полные права, чтобы Loki мог писать
      changed_when: true

    - name: Создать конфигурационный файл Loki
      ansible.builtin.template:
        src: "{{ playbook_dir }}/ansible_templates/loki-config.yaml.j2"
        dest: "{{ loki_config_path }}/{{ loki_config_file }}"
        owner: root
        group: root
        mode: '0644'

    # --- ЗАДАЧИ ДЛЯ ОБРАЗА LOKI (ПРАВИЛЬНОЕ РАСПОЛОЖЕНИЕ: ПЕРЕД ЗАПУСКОМ КОНТЕЙНЕРА) ---
    - name: Скопировать образ Loki с локальной машины на ВМ
      ansible.builtin.copy:
        src: "{{ playbook_dir }}/{{ loki_docker_image_tar }}"
        dest: "/tmp/{{ loki_docker_image_tar }}"
        owner: root
        group: root
        mode: '0644'

    - name: Загрузить образ Loki в Docker на ВМ
      ansible.builtin.shell: "sudo docker load -i /tmp/{{ loki_docker_image_tar }}"
      changed_when: true
    # --- КОНЕЦ ЗАДАЧ ДЛЯ ОБРАЗА LOKI ---

    # --- ЗАДАЧИ ДЛЯ ЗАПУСКА КОНТЕЙНЕРА LOKI (ТОЛЬКО ОДНА ЗАДАЧА!) ---
    - name: Принудительно остановить и удалить Loki Docker контейнер (если существует)
      ansible.builtin.shell: sudo docker rm -f loki || true
      changed_when: true

    - name: Запустить Loki Docker контейнер
      ansible.builtin.shell: |
        sudo docker run -d --name loki \
          --restart always \
          -p {{ loki_port }}:{{ loki_port }} \
          -v {{ loki_config_path }}/{{ loki_config_file }}:/etc/loki/config.yaml \
          -v {{ loki_data_path }}:/loki \
          {{ loki_docker_image_name }} -config.file=/etc/loki/config.yaml
      changed_when: true
    # --- КОНЕЦ ЗАДАЧ ДЛЯ ЗАПУСКА КОНТЕЙНЕРА LOKI ---

    - name: Проверить статус Loki Docker контейнера
      ansible.builtin.command: docker ps -f name=loki
      register: loki_docker_status
      changed_when: false
    - debug:
        msg: "{{ loki_docker_status.stdout_lines }}"
